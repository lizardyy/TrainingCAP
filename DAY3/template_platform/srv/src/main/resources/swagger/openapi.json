{
  "openapi": "3.0.2",
  "info": {
    "title": "Service for namespace BookService",
    "description": "This service is located at [/api/books/](/api/books/)",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.01",
  "x-sap-shortText": "Service for namespace BookService",
  "servers": [
    {
      "url": "/api/books"
    }
  ],
  "tags": [
    {
      "name": "Authors"
    },
    {
      "name": "Books",
      "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
    },
    {
      "name": "Books_texts"
    },
    {
      "name": "Currencies",
      "description": "Code list for currencies\n\nSee https://cap.cloud.sap/docs/cds/common#entity-currencies"
    },
    {
      "name": "Currencies_texts"
    },
    {
      "name": "Languages",
      "description": "Code list for languages\n\nSee https://cap.cloud.sap/docs/cds/common#entity-languages"
    },
    {
      "name": "Languages_texts"
    },
    {
      "name": "OrderHeaders"
    },
    {
      "name": "Orders"
    },
    {
      "name": "Orders_items"
    },
    {
      "name": "Reviews",
      "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed"
    },
    {
      "name": "status",
      "description": "Aspect for a code list with name and description\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-codelist"
    },
    {
      "name": "status_texts"
    },
    {
      "name": "Upload"
    }
  ],
  "paths": {
    "/$batch": {
      "post": {
        "summary": "Sends a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Books HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Authors": {
      "get": {
        "summary": "Retrieves a list of authors.",
        "tags": [
          "Authors"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "title",
                  "title desc",
                  "name",
                  "name desc",
                  "firstName",
                  "firstName desc",
                  "lastName",
                  "lastName desc",
                  "age",
                  "age desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "title",
                  "name",
                  "firstName",
                  "lastName",
                  "age"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "books"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved authors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Authors",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Authors"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single author.",
        "tags": [
          "Authors"
        ],
        "requestBody": {
          "description": "New author",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Authors-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created author",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Authors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Authors({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single author.",
        "tags": [
          "Authors"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "title",
                  "name",
                  "firstName",
                  "lastName",
                  "age"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "books"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved author",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Authors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single author.",
        "tags": [
          "Authors"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Authors-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single author.",
        "tags": [
          "Authors"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Authors({ID})/books": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of books of a author.",
        "tags": [
          "Authors",
          "Books"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "title",
                  "title desc",
                  "descr",
                  "descr desc",
                  "stock",
                  "stock desc",
                  "price",
                  "price desc",
                  "currency_code",
                  "currency_code desc",
                  "rating",
                  "rating desc",
                  "isReviewable",
                  "isReviewable desc",
                  "author_ID",
                  "author_ID desc",
                  "year",
                  "year desc",
                  "status_code",
                  "status_code desc",
                  "coverImage",
                  "coverImage desc",
                  "media",
                  "media desc",
                  "fileName",
                  "fileName desc",
                  "mediaType",
                  "mediaType desc",
                  "isbn",
                  "isbn desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "descr",
                  "stock",
                  "price",
                  "currency_code",
                  "rating",
                  "isReviewable",
                  "author_ID",
                  "year",
                  "status_code",
                  "coverImage",
                  "media",
                  "fileName",
                  "mediaType",
                  "isbn"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "currency",
                  "reviews",
                  "author",
                  "status",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Books",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Books"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single book of a author.",
        "tags": [
          "Authors",
          "Books"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Books-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Books"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books": {
      "get": {
        "summary": "Retrieves a list of books.",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "title",
                  "title desc",
                  "descr",
                  "descr desc",
                  "stock",
                  "stock desc",
                  "price",
                  "price desc",
                  "currency_code",
                  "currency_code desc",
                  "rating",
                  "rating desc",
                  "isReviewable",
                  "isReviewable desc",
                  "author_ID",
                  "author_ID desc",
                  "year",
                  "year desc",
                  "status_code",
                  "status_code desc",
                  "coverImage",
                  "coverImage desc",
                  "media",
                  "media desc",
                  "fileName",
                  "fileName desc",
                  "mediaType",
                  "mediaType desc",
                  "isbn",
                  "isbn desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "descr",
                  "stock",
                  "price",
                  "currency_code",
                  "rating",
                  "isReviewable",
                  "author_ID",
                  "year",
                  "status_code",
                  "coverImage",
                  "media",
                  "fileName",
                  "mediaType",
                  "isbn"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "currency",
                  "reviews",
                  "author",
                  "status",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Books",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Books"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single book.",
        "tags": [
          "Books"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Books-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Books"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single book.",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "descr",
                  "stock",
                  "price",
                  "currency_code",
                  "rating",
                  "isReviewable",
                  "author_ID",
                  "year",
                  "status_code",
                  "coverImage",
                  "media",
                  "fileName",
                  "mediaType",
                  "isbn"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "currency",
                  "reviews",
                  "author",
                  "status",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Books"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single book.",
        "tags": [
          "Books"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Books-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single book.",
        "tags": [
          "Books"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books({ID})/BookService.addReview": {
      "post": {
        "summary": "Invokes action addReview",
        "tags": [
          "Books"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BookService.Reviews"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.1,
                        "maximum": 9.9,
                        "minimum": -9.9
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 2,
                    "x-sap-scale": 1,
                    "nullable": true
                  },
                  "title": {
                    "type": "string",
                    "maxLength": 111,
                    "nullable": true
                  },
                  "descr": {
                    "type": "string",
                    "maxLength": 1111,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Books({ID})/author": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves author of a book.",
        "tags": [
          "Books",
          "Authors"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "title",
                  "name",
                  "firstName",
                  "lastName",
                  "age"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "books"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved author",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Authors"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books({ID})/currency": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves currency of a book.",
        "tags": [
          "Books",
          "Currencies"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books({ID})/localized": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves localized of a book.",
        "tags": [
          "Books",
          "Books_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID_texts",
                  "locale",
                  "ID",
                  "title",
                  "descr"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Books_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books({ID})/reviews": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of reviews of a book.",
        "tags": [
          "Books",
          "Reviews"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "book_ID",
                  "book_ID desc",
                  "rating",
                  "rating desc",
                  "title",
                  "title desc",
                  "descr",
                  "descr desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "book_ID",
                  "rating",
                  "title",
                  "descr"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "book"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Reviews",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Reviews"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single review of a book.",
        "tags": [
          "Books",
          "Reviews"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Reviews-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Reviews"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books({ID})/status": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves status of a book.",
        "tags": [
          "Books",
          "status"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.status"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books({ID})/texts": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of texts of a book.",
        "tags": [
          "Books",
          "Books_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID_texts",
                  "ID_texts desc",
                  "locale",
                  "locale desc",
                  "ID",
                  "ID desc",
                  "title",
                  "title desc",
                  "descr",
                  "descr desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID_texts",
                  "locale",
                  "ID",
                  "title",
                  "descr"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Books_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Books_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single text of a book.",
        "tags": [
          "Books",
          "Books_texts"
        ],
        "requestBody": {
          "description": "New text",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Books_texts-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Books_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books_texts": {
      "get": {
        "summary": "Retrieves a list of books_texts.",
        "tags": [
          "Books_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID_texts",
                  "ID_texts desc",
                  "locale",
                  "locale desc",
                  "ID",
                  "ID desc",
                  "title",
                  "title desc",
                  "descr",
                  "descr desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID_texts",
                  "locale",
                  "ID",
                  "title",
                  "descr"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved books_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Books_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Books_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Books_texts({ID_texts})": {
      "parameters": [
        {
          "description": "key: ID_texts",
          "in": "path",
          "name": "ID_texts",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single books_text.",
        "tags": [
          "Books_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID_texts",
                  "locale",
                  "ID",
                  "title",
                  "descr"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved books_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Books_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies": {
      "get": {
        "summary": "Retrieves a list of currencies.",
        "tags": [
          "Currencies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc",
                  "symbol",
                  "symbol desc",
                  "minorUnit",
                  "minorUnit desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currencies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Currencies",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Currencies"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies('{code}')": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single currency.",
        "tags": [
          "Currencies"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code",
                  "symbol",
                  "minorUnit"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currency",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Currencies"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies('{code}')/localized": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieves localized of a currency.",
        "tags": [
          "Currencies",
          "Currencies_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies('{code}')/texts": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of texts of a currency.",
        "tags": [
          "Currencies",
          "Currencies_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Currencies_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Currencies_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies_texts": {
      "get": {
        "summary": "Retrieves a list of currencies_texts.",
        "tags": [
          "Currencies_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currencies_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Currencies_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Currencies_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Currencies_texts(locale='{locale}',code='{code}')": {
      "parameters": [
        {
          "description": "Type for a language code",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 3
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single currencies_text.",
        "tags": [
          "Currencies_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved currencies_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Currencies_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages": {
      "get": {
        "summary": "Retrieves a list of languages.",
        "tags": [
          "Languages"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved languages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Languages",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Languages"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages('{code}')": {
      "parameters": [
        {
          "description": "Type for a language code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single language.",
        "tags": [
          "Languages"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Languages"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages('{code}')/localized": {
      "parameters": [
        {
          "description": "Type for a language code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        }
      ],
      "get": {
        "summary": "Retrieves localized of a language.",
        "tags": [
          "Languages",
          "Languages_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Languages_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages('{code}')/texts": {
      "parameters": [
        {
          "description": "Type for a language code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of texts of a language.",
        "tags": [
          "Languages",
          "Languages_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Languages_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Languages_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages_texts": {
      "get": {
        "summary": "Retrieves a list of languages_texts.",
        "tags": [
          "Languages_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved languages_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Languages_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Languages_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Languages_texts(locale='{locale}',code='{code}')": {
      "parameters": [
        {
          "description": "Type for a language code",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "Type for a language code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single languages_text.",
        "tags": [
          "Languages_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved languages_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Languages_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OrderHeaders": {
      "get": {
        "summary": "Retrieves a list of order headers.",
        "tags": [
          "OrderHeaders"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "status",
                  "status desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "status"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved order headers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of OrderHeaders",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.OrderHeaders"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single order header.",
        "tags": [
          "OrderHeaders"
        ],
        "requestBody": {
          "description": "New order header",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.OrderHeaders-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created order header",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.OrderHeaders"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/OrderHeaders({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single order header.",
        "tags": [
          "OrderHeaders"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "status"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved order header",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.OrderHeaders"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single order header.",
        "tags": [
          "OrderHeaders"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.OrderHeaders-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single order header.",
        "tags": [
          "OrderHeaders"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Orders": {
      "get": {
        "summary": "Retrieves a list of orders.",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "header_ID",
                  "header_ID desc",
                  "status",
                  "status desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "header_ID",
                  "status"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "header",
                  "items"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Orders",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Orders"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single order.",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "description": "New order",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Orders-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Orders"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Orders('{ID}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single order.",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "header_ID",
                  "status"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "header",
                  "items"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Orders"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single order.",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Orders-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single order.",
        "tags": [
          "Orders"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Orders('{ID}')/header": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieves header of a order.",
        "tags": [
          "Orders",
          "OrderHeaders"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "status"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved header",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.OrderHeaders"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Orders('{ID}')/items": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of items of a order.",
        "tags": [
          "Orders",
          "Orders_items"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "up__ID desc",
                  "ID",
                  "ID desc",
                  "book_ID",
                  "book_ID desc",
                  "quantity",
                  "quantity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "ID",
                  "book_ID",
                  "quantity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "up_",
                  "book"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Orders_items",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Orders_items"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single item of a order.",
        "tags": [
          "Orders",
          "Orders_items"
        ],
        "requestBody": {
          "description": "New item",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Orders_items-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Orders_items"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Orders_items": {
      "get": {
        "summary": "Retrieves a list of orders_items.",
        "tags": [
          "Orders_items"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "up__ID desc",
                  "ID",
                  "ID desc",
                  "book_ID",
                  "book_ID desc",
                  "quantity",
                  "quantity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "ID",
                  "book_ID",
                  "quantity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "up_",
                  "book"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved orders_items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Orders_items",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Orders_items"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Orders_items(up__ID='{up__ID}',ID={ID})": {
      "parameters": [
        {
          "description": "key: up__ID",
          "in": "path",
          "name": "up__ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single orders_item.",
        "tags": [
          "Orders_items"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "up__ID",
                  "ID",
                  "book_ID",
                  "quantity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "up_",
                  "book"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved orders_item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Orders_items"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Orders_items(up__ID='{up__ID}',ID={ID})/book": {
      "parameters": [
        {
          "description": "key: up__ID",
          "in": "path",
          "name": "up__ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves book of a orders_item.",
        "tags": [
          "Orders_items",
          "Books"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "descr",
                  "stock",
                  "price",
                  "currency_code",
                  "rating",
                  "isReviewable",
                  "author_ID",
                  "year",
                  "status_code",
                  "coverImage",
                  "media",
                  "fileName",
                  "mediaType",
                  "isbn"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "currency",
                  "reviews",
                  "author",
                  "status",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Books"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Orders_items(up__ID='{up__ID}',ID={ID})/book/BookService.addReview": {
      "post": {
        "summary": "Invokes action addReview",
        "tags": [
          "Orders_items"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BookService.Reviews"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: up__ID",
            "in": "path",
            "name": "up__ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.1,
                        "maximum": 9.9,
                        "minimum": -9.9
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 2,
                    "x-sap-scale": 1,
                    "nullable": true
                  },
                  "title": {
                    "type": "string",
                    "maxLength": 111,
                    "nullable": true
                  },
                  "descr": {
                    "type": "string",
                    "maxLength": 1111,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Orders_items(up__ID='{up__ID}',ID={ID})/up_": {
      "parameters": [
        {
          "description": "key: up__ID",
          "in": "path",
          "name": "up__ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }
      ],
      "get": {
        "summary": "Retrieves up_ of a orders_item.",
        "tags": [
          "Orders_items",
          "Orders"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "header_ID",
                  "status"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "header",
                  "items"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved up_",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Orders"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Reviews": {
      "get": {
        "summary": "Retrieves a list of reviews.",
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "book_ID",
                  "book_ID desc",
                  "rating",
                  "rating desc",
                  "title",
                  "title desc",
                  "descr",
                  "descr desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "book_ID",
                  "rating",
                  "title",
                  "descr"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "book"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Reviews",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.Reviews"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single review.",
        "tags": [
          "Reviews"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Reviews-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Reviews"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Reviews({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single review.",
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "book_ID",
                  "rating",
                  "title",
                  "descr"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "book"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Reviews"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single review.",
        "tags": [
          "Reviews"
        ],
        "requestBody": {
          "description": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Reviews-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single review.",
        "tags": [
          "Reviews"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Reviews({ID})/book": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves book of a review.",
        "tags": [
          "Reviews",
          "Books"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "title",
                  "descr",
                  "stock",
                  "price",
                  "currency_code",
                  "rating",
                  "isReviewable",
                  "author_ID",
                  "year",
                  "status_code",
                  "coverImage",
                  "media",
                  "fileName",
                  "mediaType",
                  "isbn"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "currency",
                  "reviews",
                  "author",
                  "status",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Books"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Reviews({ID})/book/BookService.addReview": {
      "post": {
        "summary": "Invokes action addReview",
        "tags": [
          "Reviews"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BookService.Reviews"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "anyOf": [
                      {
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 0.1,
                        "maximum": 9.9,
                        "minimum": -9.9
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "example": 0,
                    "x-sap-precision": 2,
                    "x-sap-scale": 1,
                    "nullable": true
                  },
                  "title": {
                    "type": "string",
                    "maxLength": 111,
                    "nullable": true
                  },
                  "descr": {
                    "type": "string",
                    "maxLength": 1111,
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Upload": {
      "get": {
        "summary": "Retrieves upload.",
        "tags": [
          "Upload"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "csv"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved upload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.Upload"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes upload.",
        "tags": [
          "Upload"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookService.Upload-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Retrieves a list of status.",
        "tags": [
          "status"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of status",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.status"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/status('{code}')": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "O",
              "A",
              "X"
            ],
            "default": "O"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single status.",
        "tags": [
          "status"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "texts",
                  "localized"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.status"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/status('{code}')/localized": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "O",
              "A",
              "X"
            ],
            "default": "O"
          }
        }
      ],
      "get": {
        "summary": "Retrieves localized of a status.",
        "tags": [
          "status",
          "status_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved localized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.status_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/status('{code}')/texts": {
      "parameters": [
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "O",
              "A",
              "X"
            ],
            "default": "O"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of texts of a status.",
        "tags": [
          "status",
          "status_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of status_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.status_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/status_texts": {
      "get": {
        "summary": "Retrieves a list of status_texts.",
        "tags": [
          "status_texts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "locale desc",
                  "name",
                  "name desc",
                  "descr",
                  "descr desc",
                  "code",
                  "code desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status_texts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of status_texts",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BookService.status_texts"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/status_texts(locale='{locale}',code='{code}')": {
      "parameters": [
        {
          "description": "Type for a language code",
          "in": "path",
          "name": "locale",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 14
          }
        },
        {
          "description": "key: code",
          "in": "path",
          "name": "code",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "O",
              "A",
              "X"
            ],
            "default": "O"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single status_text.",
        "tags": [
          "status_texts"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "descr",
                  "code"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status_text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookService.status_texts"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BookService.Authors": {
        "title": "Authors",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "books": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Books"
            }
          },
          "books@count": {
            "$ref": "#/components/schemas/count"
          }
        }
      },
      "BookService.Authors-create": {
        "title": "Authors (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "required": [
          "ID"
        ]
      },
      "BookService.Authors-update": {
        "title": "Authors (for update)",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "BookService.Books": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 99999999999.99,
                "minimum": -99999999999.99
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 13,
            "x-sap-scale": 2,
            "nullable": true
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.Currencies"
              }
            ],
            "nullable": true
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.1,
                "maximum": 9.9,
                "minimum": -9.9
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 2,
            "x-sap-scale": 1,
            "nullable": true
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Reviews"
            }
          },
          "reviews@count": {
            "$ref": "#/components/schemas/count"
          },
          "isReviewable": {
            "type": "boolean",
            "default": true
          },
          "author": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.Authors"
              }
            ],
            "nullable": true
          },
          "author_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.status"
              }
            ],
            "nullable": true
          },
          "status_code": {
            "type": "string",
            "maxLength": 1,
            "nullable": true,
            "default": "O"
          },
          "coverImage": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "media": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "isbn": {
            "type": "string",
            "maxLength": 40,
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Books_texts"
            }
          },
          "texts@count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.Books_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "BookService.Books-create": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 99999999999.99,
                "minimum": -99999999999.99
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 13,
            "x-sap-scale": 2,
            "nullable": true
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.1,
                "maximum": 9.9,
                "minimum": -9.9
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 2,
            "x-sap-scale": 1,
            "nullable": true
          },
          "author_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coverImage": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "media": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "isbn": {
            "type": "string",
            "maxLength": 40,
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Books_texts-create"
            }
          }
        },
        "required": [
          "ID",
          "title",
          "stock",
          "isbn"
        ]
      },
      "BookService.Books-update": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for update)",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "price": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.01,
                "maximum": 99999999999.99,
                "minimum": -99999999999.99
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 13,
            "x-sap-scale": 2,
            "nullable": true
          },
          "currency_code": {
            "type": "string",
            "maxLength": 3,
            "nullable": true
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.1,
                "maximum": 9.9,
                "minimum": -9.9
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 2,
            "x-sap-scale": 1,
            "nullable": true
          },
          "author_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "coverImage": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "media": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "isbn": {
            "type": "string",
            "maxLength": 40,
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Books_texts-create"
            }
          }
        }
      },
      "BookService.Books_texts": {
        "title": "Books_texts",
        "type": "object",
        "properties": {
          "ID_texts": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "locale": {
            "type": "string",
            "maxLength": 14,
            "nullable": true
          },
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          }
        }
      },
      "BookService.Books_texts-create": {
        "title": "Books_texts (for create)",
        "type": "object",
        "properties": {
          "ID_texts": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "locale": {
            "type": "string",
            "maxLength": 14,
            "nullable": true
          },
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          }
        },
        "required": [
          "ID_texts",
          "title"
        ]
      },
      "BookService.Currencies": {
        "title": "Code list for currencies\n\nSee https://cap.cloud.sap/docs/cds/common#entity-currencies",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          },
          "symbol": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "minorUnit": {
            "type": "integer",
            "format": "int16",
            "nullable": true
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Currencies_texts"
            }
          },
          "texts@count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.Currencies_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "BookService.Currencies_texts": {
        "title": "Currencies_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 3
          }
        }
      },
      "BookService.Languages": {
        "title": "Code list for languages\n\nSee https://cap.cloud.sap/docs/cds/common#entity-languages",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 14
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Languages_texts"
            }
          },
          "texts@count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.Languages_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "BookService.Languages_texts": {
        "title": "Languages_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 14
          }
        }
      },
      "BookService.OrderHeaders": {
        "title": "OrderHeaders",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BookService.OrderHeaders-create": {
        "title": "OrderHeaders (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "ID"
        ]
      },
      "BookService.OrderHeaders-update": {
        "title": "OrderHeaders (for update)",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BookService.Orders": {
        "title": "Orders",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string"
          },
          "header": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.OrderHeaders"
              }
            ],
            "nullable": true
          },
          "header_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Orders_items"
            }
          },
          "items@count": {
            "$ref": "#/components/schemas/count"
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BookService.Orders-create": {
        "title": "Orders (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string"
          },
          "header": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.OrderHeaders-create"
              }
            ],
            "nullable": true
          },
          "header_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Orders_items-create"
            }
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "ID"
        ]
      },
      "BookService.Orders-update": {
        "title": "Orders (for update)",
        "type": "object",
        "properties": {
          "header": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.OrderHeaders-create"
              }
            ],
            "nullable": true
          },
          "header_ID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.Orders_items-create"
            }
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BookService.Orders_items": {
        "title": "Orders_items",
        "type": "object",
        "properties": {
          "up_": {
            "$ref": "#/components/schemas/BookService.Orders"
          },
          "up__ID": {
            "type": "string"
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "book": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.Books"
              }
            ],
            "nullable": true
          },
          "book_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "BookService.Orders_items-create": {
        "title": "Orders_items (for create)",
        "type": "object",
        "properties": {
          "up__ID": {
            "type": "string"
          },
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "book_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "required": [
          "up__ID",
          "ID"
        ]
      },
      "BookService.Reviews": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "book": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.Books"
              }
            ],
            "nullable": true
          },
          "book_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.1,
                "maximum": 9.9,
                "minimum": -9.9
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 2,
            "x-sap-scale": 1,
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          }
        }
      },
      "BookService.Reviews-create": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "book_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.1,
                "maximum": 9.9,
                "minimum": -9.9
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 2,
            "x-sap-scale": 1,
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          }
        },
        "required": [
          "ID",
          "book_ID",
          "title",
          "descr"
        ]
      },
      "BookService.Reviews-update": {
        "title": "Aspect to capture changes by user and name\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-managed (for update)",
        "type": "object",
        "properties": {
          "book_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.1,
                "maximum": 9.9,
                "minimum": -9.9
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 2,
            "x-sap-scale": 1,
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 111,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1111,
            "nullable": true
          }
        }
      },
      "BookService.Upload": {
        "title": "Upload",
        "type": "object",
        "properties": {
          "csv": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          }
        }
      },
      "BookService.Upload-update": {
        "title": "Upload (for update)",
        "type": "object",
        "properties": {
          "csv": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          }
        }
      },
      "BookService.status": {
        "title": "Aspect for a code list with name and description\n\nSee https://cap.cloud.sap/docs/cds/common#aspect-codelist",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "O",
              "A",
              "X"
            ],
            "default": "O"
          },
          "texts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookService.status_texts"
            }
          },
          "texts@count": {
            "$ref": "#/components/schemas/count"
          },
          "localized": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookService.status_texts"
              }
            ],
            "nullable": true
          }
        }
      },
      "BookService.status_texts": {
        "title": "status_texts",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "maxLength": 14
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "descr": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "code": {
            "type": "string",
            "maxLength": 1,
            "enum": [
              "O",
              "A",
              "X"
            ],
            "default": "O"
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}
